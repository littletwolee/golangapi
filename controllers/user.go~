package controllers

import (
//	"mongoapi/modules"
//	"encoding/json"

	"github.com/astaxie/beego"
	"gopkg.in/mgo.v2"
        "gopkg.in/mgo.v2/bson"
	"log"
)

// Operations about object
type UserController struct {
	beego.Controller
}
type Person struct {
        Name string
        Phone string
}
// @Title Get
// @Description find object by objectid
// @Param	objectId		path 	string	true		"the objectid you want to get"
// @Success 200 {object} models.Object
// @Failure 403 :objectId is empty
// @router /:objectId [get]
func (o *UserController) GetAll() {
	//"10.157.193.47:27017"
	objectId := o.GetString("objectId")
	session, err := mgo.Dial("10.157.193.47:27017")
        if err != nil {
                panic(err)
        }
        defer session.Close()

        // Optional. Switch the session to a monotonic behavior.
        session.SetMode(mgo.Monotonic, true)

        c := session.DB("test").C("people")
        err = c.Insert(&Person{"Ale", "+55 53 8116 9639"},
	               &Person{"Cla", "+55 53 8402 8510"})
        if err != nil {
                log.Fatal(err)
        }

        result := Person{}
        err = c.Find(bson.M{"name": "Ale"}).One(&result)
        if err != nil {
                log.Fatal(err)
        }
	if objectId != "" {
//		ob := modules.GetOne(objectId)
		/*if err != nil {
			o.Data["json"] = err.Error()
		} else {
			o.Data["json"] = ob
		}*/
		o.Data["json"] = result
	}
	o.ServeJSON()
}
